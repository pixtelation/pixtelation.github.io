<html>

<head>
  <title>
  Developed by Abhishek Mehta
  </title>
  
  <meta property="og:title" content="Abhi Inc." />
  <meta property="og:description" content="Future web development" />
  <meta property="og:image" content="https://lh3.googleusercontent.com/1FuDmirxpYc6vuJlqAyB920brfH6l6vLrmxX22BxbOIPV1IYwgIxJsOj2IQZy8glTRTOUWHfJU4rIfR9UQ=s1600" />
  <meta property=”og:http://abhiinc.tk/” content=”http://abhiinc.tk/” />
  
<h2><center>Developed by: Abhishek Mehta</center></h2>
<h3><center>Check out my website :<a href="http://www.abhiinc.tk">Abhi Inc</a> </center></h3>
</head>


  
<body style="margin:0px; background-image: url(https://media.giphy.com/media/120ErahsQyf1q8/giphy.gif)";>
    
 
 <canvas id="canv" onmousemove="canv_mousemove(event);" onmouseout="mx=-1;my=-1;">
  <audio autoplay="true" src="Mytone.mp3" type="audio/mpeg">
    </canvas>
  <canvas id="wordCanv" width="500px" height="500px" style="border:1px; color:white; display:none;">
  </canvas>
  <textarea id="wordsTxt" style="position:absolute;left:-100;top:-100;" onblur="init();" onkeyup="init();" onclick="init();"></textarea>
 
 <canvas id="canvas"></canvas>

  <script type="text/javascript">
      var l = document.location + "";
      l = l.replace(/%20/g, " ");
      var index = l.indexOf('?t=');
      if (index == -1) document.location = l + "?t=HaPpy B!rThD@Y  An!KeT";
      var pixels = new Array();
      var canv = $('canv');
      var ctx = canv.getContext('2d');
      var wordCanv = $('wordCanv');
      var wordCtx = wordCanv.getContext('2d');
      var mx = -1;
      var my = -1;
      var words = "";
      var txt = new Array();
      var cw = 0;
      var ch = 0;
      var resolution = 1;
      var n = 0;
      var timerRunning = false;
      var resHalfFloor = 0;
      var resHalfCeil = 0;
      function canv_mousemove(evt) {
          mx = evt.clientX - canv.offsetLeft;
          my = evt.clientY - canv.offsetTop;
      }
      function Pixel(homeX, homeY) {
          this.homeX = homeX;
          this.homeY = homeY;
          this.x = Math.random() * cw;
          this.y = Math.random() * ch;
          //tmp
          this.xVelocity = Math.random() * 10 - 5;
          this.yVelocity = Math.random() * 10 - 5;
      }
      Pixel.prototype.move = function () {
          var homeDX = this.homeX - this.x;
          var homeDY = this.homeY - this.y;
          var homeDistance = Math.sqrt(Math.pow(homeDX, 2) + Math.pow(homeDY, 2));
          var homeForce = homeDistance * 0.01;
          var homeAngle = Math.atan2(homeDY, homeDX);
          var cursorForce = 0;
          var cursorAngle = 0;
          if (mx >= 0) {
              var cursorDX = this.x - mx;
              var cursorDY = this.y - my;
              var cursorDistanceSquared = Math.pow(cursorDX, 2) + Math.pow(cursorDY, 2);
              cursorForce = Math.min(10000 / cursorDistanceSquared, 10000);
              cursorAngle = Math.atan2(cursorDY, cursorDX);
          }
          else {
              cursorForce = 0;
              cursorAngle = 0;
          }
          this.xVelocity += homeForce * Math.cos(homeAngle) + cursorForce * Math.cos(cursorAngle);
          this.yVelocity += homeForce * Math.sin(homeAngle) + cursorForce * Math.sin(cursorAngle);
          this.xVelocity *= 0.92;
          this.yVelocity *= 0.92;
          this.x += this.xVelocity;
          this.y += this.yVelocity;
      }
      function $(id) {
          return document.getElementById(id);
      }
      function timer() {
          if (!timerRunning) {
              timerRunning = true;
              setTimeout(timer, 33);
              for (var i = 0; i < pixels.length; i++) {
                  pixels[i].move();
              }
              drawPixels();
              wordsTxt.focus();
              n++;
              if (n % 10 == 0 && (cw != document.body.clientWidth || ch != document.body.clientHeight)) body_resize();
              timerRunning = false;
          }
          else {
              setTimeout(timer, 10);
          }
      }
      function drawPixels() {
          var imageData = ctx.createImageData(cw, ch);
          var actualData = imageData.data;
          var index;
          var goodX;
          var goodY;
          var realX;
          var realY;
          for (var i = 0; i < pixels.length; i++) {
              goodX = Math.floor(pixels[i].x);
              goodY = Math.floor(pixels[i].y);
              for (realX = goodX - resHalfFloor; realX <= goodX + resHalfCeil && realX >= 0 && realX < cw; realX++) {
                  for (realY = goodY - resHalfFloor; realY <= goodY + resHalfCeil && realY >= 0 && realY < ch; realY++) {
                      index = (realY * imageData.width + realX) * 4;
                      actualData[index + 3] = 255;
                  }
              }
          }
          imageData.data = actualData;
          ctx.putImageData(imageData, 0, 0);
      }
      function readWords() {
          words = $('wordsTxt').value;
          txt = words.split('\n');
      }
      function init() {
          readWords();
          var fontSize = 100;
          var wordWidth = 0;
          do {
              wordWidth = 0;
              fontSize -= 5;
              wordCtx.font = fontSize + "px sans-serif";
              for (var i = 0; i < txt.length; i++) {
                  var w = wordCtx.measureText(txt[i]).width;
                  if (w > wordWidth) wordWidth = w;
              }
          } while (wordWidth > cw - 50 || fontSize * txt.length > ch - 50)
          wordCtx.clearRect(0, 0, cw, ch);
          wordCtx.textAlign = "center";
          wordCtx.textBaseline = "middle";
          for (var i = 0; i < txt.length; i++) {
              wordCtx.fillText(txt[i], cw / 2, ch / 2 - fontSize * (txt.length / 2 - (i + 0.5)));
          }
          var index = 0;
          var imageData = wordCtx.getImageData(0, 0, cw, ch);
          for (var x = 0; x < imageData.width; x += resolution) //var i=0;i<imageData.data.length;i+=4)
          {
              for (var y = 0; y < imageData.height; y += resolution) {
                  i = (y * imageData.width + x) * 4;
                  if (imageData.data[i + 3] > 128) {
                      if (index >= pixels.length) {
                          pixels[index] = new Pixel(x, y);
                      }
                      else {
                          pixels[index].homeX = x;
                          pixels[index].homeY = y;
                      }
                      index++;
                  }
              }
          }
          pixels.splice(index, pixels.length - index);
      }
      function body_resize() {
          cw = document.body.clientWidth;
          ch = document.body.clientHeight;
          canv.width = cw;
          canv.height = ch;
          wordCanv.width = cw;
          wordCanv.height = ch;
          init();
      }
      wordsTxt.focus();
      wordsTxt.value = l.substring(index + 3);
      resHalfFloor = Math.floor(resolution / 2);
      resHalfCeil = Math.ceil(resolution / 2);
      body_resize();
      timer();
  </script>








  <script type="text/javascript">
canvas = document.getElementById("canvas")
context = canvas.getContext("2d")
canvas.width  = window.innerWidth
canvas.height = window.innerHeight
stage = new createjs.Stage(canvas)
stage.autoClear = false
ctx = canvas.getContext("2d")
ctx.fillStyle = "rgba(0, 0, 0, 0)"
ctx.fillRect 0,0,canvas.width,canvas.height
createjs.Ticker.setFPS(50)
# createjs.Ticker.timingMode = createjs.Ticker.RAF_SYNCHED
createjs.Touch.enable(stage)
stage.update()

# 重力
GRAVITY = 1

# 抵抗
K = 0.9

# スピード
SPEED = 12

# 角度(degree)からラジアン(radian)に変換
ToRadian = (degree) ->
  degree * Math.PI / 180.0

# 花火を作り上げるクラス
class Fireworks
  constructor: (@sx = 100,@sy = 100,@particles = 70) ->
    @sky = new createjs.Container()
    @r = 0
    @h = Math.random() * 360 | 0
    @s = 100
    @l = 50
    @size = 3

    for i in [0...@particles]
      speed = Math.random() * 12 + 2
      circle = new createjs.Shape()
      circle.graphics.f("hsla(#{@h}, #{@s}%, #{@l}%, 1)").dc(0, 0, @size)
      circle.snapToPixel = true
      circle.compositeOperation = "lighter"
      rad = ToRadian(Math.random() * 360 | 0)

      circle.set({
        x: @sx
        y: @sy
        vx: Math.cos(rad) * speed
        vy: Math.sin(rad) * speed
        rad: rad
      })

      @sky.addChild circle

    stage.addChild @sky

  explode: ->
    if @sky
      ++@h
      for p in [0...@sky.getNumChildren()]
        circle = @sky.getChildAt(p)

        # 加速度
        circle.vx = circle.vx * K
        circle.vy = circle.vy * K

        # 位置計算
        circle.x += circle.vx
        circle.y += circle.vy + GRAVITY

        # 色
        @l = Math.random() * 100
        # パーティクルのサイズ
        @size = @size - 0.001
        if @size > 0
          circle.graphics.c().f("hsla(#{@h}, 100%, #{@l}%, 1)").dc(0, 0, @size)

      if @sky.alpha > 0.1
        @sky.alpha -= K / 50
      else
        stage.removeChild @sky
        @sky = null

    else

    return

fireBoss = []

setInterval(->
  ctx.fillStyle = "rgba(0, 0, 0, 0.1)"
  ctx.fillRect 0,0,canvas.width,canvas.height
  return
,40)

setInterval(->
  x = Math.random() * canvas.width | 0
  y = Math.random() * canvas.height | 0
  fireBoss.push new Fireworks(x,y)
  fireBoss.push new Fireworks(x,y)
,1300)

repeat = ->
  for fireworks in [0...fireBoss.length]
    if fireBoss[fireworks].sky
      fireBoss[fireworks].explode()

  stage.update()

  return

createjs.Ticker.on("tick", repeat)

stage.addEventListener "stagemousedown", ->
  fireBoss.push new Fireworks(stage.mouseX,stage.mouseY)
  fireBoss.push new Fireworks(stage.mouseX,stage.mouseY)
</script>






  </body>


  
</html>
